import{_ as o,c as d,a2 as l,o as c}from"./chunks/framework.DPuwY6B9.js";const b=JSON.parse('{"title":"🐳 CSS","description":"","frontmatter":{"title":"🐳 CSS","outline":"deep","tags":"frontend","updateTime":"2024-10-31 09:38"},"headers":[],"relativePath":"Notes/frontend/CSS.md","filePath":"Notes/frontend/CSS.md","lastUpdated":null}'),i={name:"Notes/frontend/CSS.md"};function a(t,e,r,n,h,s){return c(),d("div",null,e[0]||(e[0]=[l('<h1 id="初步认识css" tabindex="-1">初步认识CSS <a class="header-anchor" href="#初步认识css" aria-label="Permalink to &quot;初步认识CSS&quot;">​</a></h1><h2 id="_1-规则" tabindex="-1">1. 规则 <a class="header-anchor" href="#_1-规则" aria-label="Permalink to &quot;1. 规则&quot;">​</a></h2><p>选择器及一条或多条声明<br> 引入样式时，权重排行：<br><code>!important &gt; 行内样式 &gt; 内部样式 &gt; 外部样式</code><br> 类比选择器权重排行：<br><code>!important（放到样式的后面） &gt; 行内样式 &gt; id选择器 &gt; class选择器 &gt; 标签选择器</code><br> 注意：对于包含关系的选择符，要看权重之和，谁权重高听谁话。</p><h2 id="_2-代码书写规范" tabindex="-1">2. 代码书写规范 <a class="header-anchor" href="#_2-代码书写规范" aria-label="Permalink to &quot;2. 代码书写规范&quot;">​</a></h2><ul><li>尽量用展开型而非紧凑型，为了看起来更直观。</li><li>空格要规范： <ol><li>冒号后面要空格。</li><li>选择器和大括号之间要空格。</li></ol></li></ul><h2 id="_3-选择器" tabindex="-1">3. 选择器 <a class="header-anchor" href="#_3-选择器" aria-label="Permalink to &quot;3. 选择器&quot;">​</a></h2><ul><li>通配符选择器的作用主要是去除所有元素的内外边距。</li><li>标签选择器：即将有该标签的所有元素都变色。</li><li>类选择器：定义<code>.名称</code>，如<code>class=&quot;名称&quot;</code>，注意该名称不可使用<code>p</code>、<code>div</code>等原本就用到的字符，且不能是中文。</li><li>id选择器：<code>id=&quot;&quot;</code>，与类选择器不同，id只能有一个名称，而类选择器可以有两个命名。</li><li>群组选择器：通过逗号同时选择几个标签。</li><li>后代选择器：通过空格选择某个标签的后代，拓展子代选择器（亲儿子选择器）用大于号表示。</li><li>伪类选择器：用于链接的选择器，初始状态，访问后状态，鼠标悬停状态，点击激活后状态，分别对应：<br><code>a:link -&gt; a:visited -&gt; a:hover -&gt; a:active</code><br> 记忆方法：love -&gt; hate。</li></ul><h3 id="css3新增选择器" tabindex="-1">CSS3新增选择器 <a class="header-anchor" href="#css3新增选择器" aria-label="Permalink to &quot;CSS3新增选择器&quot;">​</a></h3><ul><li><code>~</code>：兄弟选择器，如<code>div ~ li</code>表示div后面的所有小li。</li><li><code>+</code>：如<code>div + li</code>表示div和后面第一个li。</li><li><code>[]</code>：属性选择器，如<code>[class]</code>，表示有class就选择，类似还有id、type等。</li><li><code>::</code>：结构伪类选择器，如<code>li:first-child</code>表示第一个li，在用于对最后一个或第一个进行操作时很方便。</li><li><code>:target</code>：目标伪类选择器，如<code>div:target</code>。</li></ul><h2 id="文本属性" tabindex="-1">文本属性 <a class="header-anchor" href="#文本属性" aria-label="Permalink to &quot;文本属性&quot;">​</a></h2><ul><li><code>font-size</code>：字体大小。</li><li><code>font-style</code>：倾斜，<code>italic normal</code>，倾斜与正常。</li><li><code>font-family</code>：字体。</li><li><code>font-weight</code>：加粗：100、400、700、900分别对应细、正常、加粗、更粗。</li><li><code>text-align</code>：水平方向对齐方式：<code>left</code>、<code>right</code>、<code>center</code>、<code>justify</code>（只对多行起排齐作用，单行文本无作用）。</li><li><code>color</code>：字体颜色。</li><li><code>line-height</code>：行高，通过设置行高和盒子高度相同可以达到单行文本垂直居中对齐的目的，多行无用。</li><li><code>letter-spacing</code>：字符间距，对于中文是汉字之间的距离，对于英文是两个字母之间的距离。</li><li><code>word-spacing</code>：两个英文单词之间的距离。</li><li><code>text-indent</code>：首行缩进。</li><li><code>text-decoration</code>：文本修饰 <code>underline</code>、<code>overline</code>、<code>line-through</code>分别表示下/上划线和删除线，<code>none</code>表示没有任何修饰，该用法常在超文本链接中去除下划线。</li><li><code>text-transform</code>：<code>capitalize</code>、<code>lowercase</code>、<code>uppercase</code>分别表示首字母大写、全部小写、全部大写。</li><li><code>font</code>：简写，顺序为倾斜、加粗、大小/行高、字体。</li></ul><h3 id="css3新增" tabindex="-1">CSS3新增 <a class="header-anchor" href="#css3新增" aria-label="Permalink to &quot;CSS3新增&quot;">​</a></h3><ul><li><code>text-shadow</code>：文本阴影，如<code>text-shadow: 10px 10px 1px red;</code>表示水平位移、垂直位移、模糊程度、阴影部分颜色，可以同时设置两个不同颜色。</li><li><code>box-shadow</code>：盒子阴影。</li><li><code>border-radius</code>：边框圆弧。</li></ul><h2 id="背景属性" tabindex="-1">背景属性 <a class="header-anchor" href="#背景属性" aria-label="Permalink to &quot;背景属性&quot;">​</a></h2><ul><li><code>background-color</code>：背景颜色，四种表示方法，直接写颜色、<code>rgb</code>、<code>rgba</code>（相较于<code>rgb</code>多了一个透明度属性）、16进制写法。</li><li><code>background-image</code>：背景图片，<code>url()</code>。</li><li><code>background-position</code>：背景图片位置，可以直接用像素大小表示距离左边和上边的距离，也可以用单词表示：水平方向（<code>left</code>、<code>center</code>、<code>right</code>），垂直方向（<code>top</code>、<code>center</code>、<code>bottom</code>）。</li><li><code>background-repeat</code>：背景图片平铺，分为<code>repeat</code>（默认平铺）、<code>repeat-x</code>（x轴平铺）、<code>repeat-y</code>（y轴平铺）、<code>no-repeat</code>（不平铺）。</li><li><code>background-size</code>：设置背景图片的大小，可以直接设置长宽，也可以用<code>cover</code>（确保将图片整个覆盖盒子）或<code>contain</code>（长宽谁如果已经覆盖完就停止覆盖）。</li><li><code>background-attachment</code>：背景图片固定，<code>scroll</code>（滚动）、<code>fixed</code>（固定）。</li></ul><h3 id="css3新增-1" tabindex="-1">CSS3新增 <a class="header-anchor" href="#css3新增-1" aria-label="Permalink to &quot;CSS3新增&quot;">​</a></h3><ul><li>颜色渐变： <ol><li>线性渐变：<code>linear-gradient(,,, )</code>，支持多颜色渐变，支持方向（<code>to left</code>、<code>to top right</code>），支持角度写法（<code>90deg</code>）。</li><li>径向渐变：波纹状散开。</li></ol></li></ul><h2 id="过渡与动画" tabindex="-1">过渡与动画 <a class="header-anchor" href="#过渡与动画" aria-label="Permalink to &quot;过渡与动画&quot;">​</a></h2><ul><li><code>transform</code> 2D属性： <ul><li><code>translate</code>：平移，默认向右和向下为正值，可以单独设置<code>translateX/Y</code>。</li><li><code>scale</code>：缩放，<code>scale(x,y)</code>表示分别沿x、y的放大倍数。</li><li><code>rotate</code>：旋转，只有一个角度值，顺时针旋转。</li></ul></li><li>关键帧动画： <ul><li>用<code>@keyframes</code>自定义名称 <code>{}</code> 表示动画效果，表现形式有两种： <ol><li><code>from{} to{}</code> 从原本的状态过渡到最后的状态。</li><li>百分比 <code>0% 25% 50% 75% 100%</code>，可以自由调节。</li></ol></li></ul></li></ul><h3 id="动画过渡类型" tabindex="-1">动画过渡类型 <a class="header-anchor" href="#动画过渡类型" aria-label="Permalink to &quot;动画过渡类型&quot;">​</a></h3><ul><li><code>animation-timing-function</code>：可调贝塞尔曲线。</li><li>动画循环次数：数字/infinite（无限）。</li><li>动画的正反。</li></ul><h2 id="布局与浮动" tabindex="-1">布局与浮动 <a class="header-anchor" href="#布局与浮动" aria-label="Permalink to &quot;布局与浮动&quot;">​</a></h2><ul><li>浮动：<code>float: left right none</code> 分别表示左浮动、右浮动、不浮动。</li><li>清除浮动的方法： <ol><li>给浮动元素指定固定高度。</li><li>使用<code>clear</code>属性。</li><li>加一个不指定宽高的盒子对其清除浮动。</li><li>父元素设置<code>overflow: hidden</code>。</li><li>最完美的方法：父元素设置伪元素 <code>::after</code> 进行清除。</li></ol></li></ul><h3 id="盒子模型" tabindex="-1">盒子模型 <a class="header-anchor" href="#盒子模型" aria-label="Permalink to &quot;盒子模型&quot;">​</a></h3><ul><li>理解内外边距： <ol><li>边框：三要素：宽度、样式、颜色。</li><li>内边距：<code>padding</code>，可以单独设置。</li><li>外边距：<code>margin</code>，可以复写。</li></ol></li></ul><h2 id="溢出属性" tabindex="-1">溢出属性 <a class="header-anchor" href="#溢出属性" aria-label="Permalink to &quot;溢出属性&quot;">​</a></h2><ul><li><code>overflow</code>：包括以下几种方式：<code>visible</code>、<code>hidden</code>、<code>scroll</code>、<code>inherit</code>、<code>auto</code>。</li><li>空余空间：<code>white-space</code>：<code>normal</code>、<code>nowrap</code>、<code>pre</code>、<code>pre-wrap</code>、<code>pre-line</code>、<code>inherit</code>。</li></ul><h3 id="单行文本溢出部分省略号显示" tabindex="-1">单行文本溢出部分省略号显示 <a class="header-anchor" href="#单行文本溢出部分省略号显示" aria-label="Permalink to &quot;单行文本溢出部分省略号显示&quot;">​</a></h3><ol><li>指定宽度。</li><li><code>white-space: nowrap</code>。</li><li><code>overflow: hidden</code>。</li><li><code>text-overflow: ellipsis</code>。</li></ol><h2 id="显示属性" tabindex="-1">显示属性 <a class="header-anchor" href="#显示属性" aria-label="Permalink to &quot;显示属性&quot;">​</a></h2><ul><li><code>display</code> 四种属性：<code>block</code>、<code>inline</code>、<code>inline-block</code>、<code>none</code>。</li><li>定位：<code>position</code>，通常子绝父对。</li><li>透明度：<code>opacity</code>。</li></ul><h3 id="自适应布局" tabindex="-1">自适应布局 <a class="header-anchor" href="#自适应布局" aria-label="Permalink to &quot;自适应布局&quot;">​</a></h3><ul><li>窗口自适应时设置<code>html, body { height: 100%; }</code>。</li><li>实践操作：两栏布局（两种方法实现）。</li></ul><h2 id="其他注意事项" tabindex="-1">其他注意事项 <a class="header-anchor" href="#其他注意事项" aria-label="Permalink to &quot;其他注意事项&quot;">​</a></h2><ul><li>使用<code>calc</code>函数时，注意减号前后要有空格。</li><li>图片整合后通过<code>background-position</code>可以节省访问次数，加快访问速度（雪碧图）。</li><li>防止空内容不好看，可以设置<code>min-height</code>、<code>min-width</code>。</li></ul><hr>',36)]))}const f=o(i,[["render",a]]);export{b as __pageData,f as default};
